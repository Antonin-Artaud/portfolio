{"version":3,"sources":["Components/DesignComponent/DesignComponentProject.js","Video/Tchat.mp4","Video/Pacman.mp4","Image/chat.png","Image/Pacman.png","Components/useStyles.js","Components/Project.js","Components/Skills.js","App.js","reportWebVitals.js","index.js"],"names":["DialogTitle","withStyles","theme","root","margin","padding","spacing","closeButton","position","right","top","color","palette","grey","props","children","classes","onClose","other","disableTypography","className","Typography","variant","IconButton","aria-label","onClick","DialogContent","MuiDialogContent","DialogActions","MuiDialogActions","DesignComponentProject","React","useState","open","setOpen","handleClose","Button","size","Dialog","aria-labelledby","maxWidth","id","setTitle","dividers","controls","width","src","srcVideo","type","href","linkGithub","fullWidth","target","autoFocus","useStyles","makeStyles","flexGrow","paper","textAlign","backgroundColor","project","useStylesCard","maxHeight","media","height","CardCustom","Card","CardActionArea","CardMedia","component","alt","image","srcImage","title","CardContent","gutterBottom","align","content","CardActions","disableSpacing","modal","Project","Grid","container","item","xs","sm","xl","lg","Paper","ChatImage","Chat","date","PacmanImage","Pacman","CircularProgressWithLabel","Box","display","left","CircularProgress","bottom","alignItems","justifyContent","Math","round","value","label","Skills","progress","setProgress","accurate","useEffect","timer","setInterval","prevProgress","clearInterval","App","prefersDarkMode","useMediaQuery","useMemo","createMuiTheme","ThemeProvider","CssBaseline","Container","wrap","md","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","Fragment","document","getElementById"],"mappings":"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","file":"static/js/main.f9e7f98e.chunk.js","sourcesContent":["import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(1),\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n    },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n    const { children, classes, onClose, ...other } = props;\r\n    return (\r\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n            <Typography variant=\"h6\">{children}</Typography>\r\n            {onClose ? (\r\n                <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ) : null}\r\n        </MuiDialogTitle>\r\n    );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n    root: {\r\n        padding: theme.spacing(1),\r\n    },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n    root: {\r\n        margin: 0,\r\n        padding: theme.spacing(1),\r\n    },\r\n}))(MuiDialogActions);\r\n\r\nexport default function DesignComponentProject(props) {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Button size={'medium'} variant=\"contained\" color={'primary'} onClick={handleClickOpen}>\r\n                Démo\r\n            </Button>\r\n            <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open} maxWidth={'lg'}>\r\n                <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n                    {props.setTitle}\r\n                </DialogTitle>\r\n                <DialogContent dividers>\r\n                    <video controls key={props.srcVideo} width={1232}>\r\n                        <source src={props.srcVideo} type={\"video/mp4\"}/>\r\n                        Your browser does not support this video format. :(\r\n                    </video>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        onClick={handleClose}\r\n                        href={props.linkGithub}\r\n                        fullWidth\r\n                        variant={'contained'}\r\n                        target={'_bank'}\r\n                        color=\"primary\"\r\n                        size=\"medium\"\r\n                        autoFocus>\r\n                        Github code\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/Tchat.c3a6a3d6.mp4\";","export default __webpack_public_path__ + \"static/media/Pacman.bd9db963.mp4\";","export default __webpack_public_path__ + \"static/media/chat.1c863ecf.png\";","export default __webpack_public_path__ + \"static/media/Pacman.2f6d6f79.png\";","import {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    palette: {\r\n        type: 'dark',\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1.75),\r\n        textAlign: 'left',\r\n        backgroundColor: 'white',\r\n        color: 'black',\r\n    },\r\n    project: {\r\n        padding: theme.spacing(0.25),\r\n        textAlign: 'left',\r\n        backgroundColor: 'white',\r\n        color: 'black',\r\n    },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from \"react\";\r\nimport DesignComponentProject from \"./DesignComponent/DesignComponentProject\";\r\nimport Chat from \"../../src/Video/Tchat.mp4\";\r\nimport Pacman from \"../../src/Video/Pacman.mp4\";\r\nimport ChatImage from \"../../src/Image/chat.png\";\r\nimport PacmanImage from '../Image/Pacman.png';\r\nimport {Grid, Paper} from \"@material-ui/core\";\r\nimport useStyles from \"./useStyles\";\r\nimport {makeStyles} from \"@material-ui/styles\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStylesCard = makeStyles({\r\n    root: {\r\n        maxWidth: 'xl',\r\n        maxHeight: 'lg',\r\n    },\r\n    media: {\r\n        height: 150,\r\n    },\r\n});\r\n\r\nfunction CardCustom(props) {\r\n    const classes = useStylesCard();\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardActionArea>\r\n                <CardMedia\r\n                    className={classes.media}\r\n                    component=\"img\"\r\n                    alt=\"Image du projet\"\r\n                    height=\"140\"\r\n                    image={props.srcImage}\r\n                    title=\"Contemplative Reptile\"\r\n                />\r\n                <CardContent>\r\n                    <Typography gutterBottom variant=\"h5\" align={'center'} component=\"h2\">\r\n                        {props.title}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" align={'left'} component=\"p\">\r\n                        {props.content}\r\n                    </Typography>\r\n                </CardContent>\r\n            </CardActionArea>\r\n            <CardActions disableSpacing={false}>\r\n                {props.modal}\r\n            </CardActions>\r\n        </Card>\r\n    )\r\n}\r\n\r\nfunction Project(){\r\n    const classes = useStyles();\r\n    return (\r\n        <>\r\n            <h1>Projets réalisés</h1>\r\n            <div className={classes.root}>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12} sm={6} xl={4} lg={6}>\r\n                        <Paper className={classes.project}>\r\n                            <CardCustom\r\n                                title={'Programme de communication multi-client en C (Unix)'}\r\n                                srcImage={ChatImage}\r\n                                content={'Dans le cadre de mon stage Août 2020 pour CampusID, j\\'ai du réalisé un tchat sous unix' +\r\n                                ' avec ihm en C (GTK). J\\'ai du apprendre à utiliser les processus léger d\\'unix + les sémaphores (première utilisation / découverte).' +\r\n                                ' J\\'ai rencontré une difficulté sur la gestion simultanée des clients (gérer la perte de connection, faire un keep-alive).' +\r\n                                ' J\\'ai su ensuite trouvé une solution toute à fait viable.'}\r\n                                modal={\r\n                                    <DesignComponentProject\r\n                                        setTitle={'Programme de communication multi-client en C (Unix)'}\r\n                                        srcVideo={Chat}\r\n                                        linkGithub={'https://github.com/Antonin-Artaud/Project-C/tree/master/Socket'}\r\n                                    />\r\n                                }\r\n                                date={'10/09/2019'}\r\n                            />\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} xl={4} lg={6}>\r\n                        <Paper className={classes.project}>\r\n                            <CardCustom\r\n                                title={'Pacman en C (Unix)'}\r\n                                srcImage={PacmanImage}\r\n                                content={'Voici un projet de première année. Il s\\'agit d\\'un jeu coder en C, je me suis inspiré de la base du pacman.\\n' +\r\n                                ' J\\'ai 3 versions de disponible de ce projet l\\'une via une api fournit par notre professeur, l\\'une avec GTK/CAIRO, et une dernière\\n' +\r\n                                ' qui utilise SDL (dans cette versions absolument tout est fait au plus bas niveau). J\\'ai utilisé un algorithme pathfinder pour les ennemis\\n' +\r\n                                ' pour trouver le chemin le plus court possible entre les ennemis et le joueur à chaque déplacement.'}\r\n                                modal={\r\n                                    <DesignComponentProject\r\n                                        setTitle={'Pacman en C (Unix)'}\r\n                                        srcVideo={Pacman}\r\n                                        linkGithub={'https://github.com/Antonin-Artaud/Project-C/tree/master/Pacman'}\r\n                                    />\r\n                                }\r\n                                date={'20/07/2019'}\r\n                            />\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} xl={4} lg={6}>\r\n                        <Paper className={classes.project}>\r\n                            <CardCustom\r\n                                title={'Portfolio (React.js)'}\r\n                                srcImage={PacmanImage}\r\n                                content={\"Dans le cadre de mon école j'ai été amener à réaliser un portfolio. J'ai donc\" +\r\n                                \" choisis d'utiliser le framework React.js que j'affectionne particulièrement\"}\r\n                                modal={\r\n                                    <Button\r\n                                        href={'https://github.com/Antonin-Artaud/portfolio'}\r\n                                        variant={'contained'}\r\n                                        target={'_bank'}\r\n                                        color=\"primary\"\r\n                                        size=\"medium\"\r\n                                        autoFocus>\r\n                                        Github code\r\n                                    </Button>\r\n                                }\r\n                                date={'07/03/2021'}\r\n                            />\r\n                        </Paper>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Project;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nfunction CircularProgressWithLabel(props) {\r\n    return (\r\n        <>\r\n            <Box position=\"relative\" display=\"inline-flex\" left={2}>\r\n                <CircularProgress variant=\"determinate\" size={50} {...props} />\r\n                <Box\r\n                    top={0}\r\n                    left={0}\r\n                    bottom={0}\r\n                    right={0}\r\n                    position=\"absolute\"\r\n                    display=\"flex\"\r\n                    alignItems=\"center\"\r\n                    justifyContent=\"center\"\r\n                >\r\n                    <Typography variant=\"caption\" component=\"div\" color=\"textSecondary\">{`${Math.round(\r\n                        props.value,\r\n                    )}%`}</Typography>\r\n                </Box>\r\n            </Box>\r\n            <Box\r\n            >\r\n                {props.label}\r\n            </Box>\r\n        </>\r\n    );\r\n}\r\n\r\nCircularProgressWithLabel.propTypes = {\r\n    /**\r\n     * The value of the progress indicator for the determinate variant.\r\n     * Value between 0 and 100.\r\n     */\r\n    value: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default function Skills(props) {\r\n    const [progress, setProgress] = React.useState(0);\r\n\r\n    const accurate = props.accurate;\r\n\r\n    React.useEffect(() => {\r\n        const timer = setInterval(() => {\r\n            setProgress((prevProgress) => (prevProgress >= accurate ? prevProgress : prevProgress + 1));\r\n        }, 100);\r\n        return () => {\r\n            clearInterval(timer);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <CircularProgressWithLabel value={progress} label={props.label}/>\r\n        </>\r\n    );\r\n}\r\n","import React from 'react'\nimport {Container, createMuiTheme, Grid, Paper, useMediaQuery} from '@material-ui/core'\n\nimport Project from \"./Components/Project\";\n\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport ThemeProvider from \"@material-ui/styles/ThemeProvider\";\n\nimport './App.css';\nimport useStyles from \"./Components/useStyles\";\nimport Skills from \"./Components/Skills\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Avatar from \"@material-ui/core/Avatar\";\n\nexport default function App() {\n    const classes = useStyles();\n\n    const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n\n    const theme = React.useMemo(\n        () =>\n            createMuiTheme({\n                palette: {\n                    type: prefersDarkMode ? 'dark' : 'light',\n                },\n            }),\n        [prefersDarkMode],\n    );\n\n\n    return (\n        <ThemeProvider theme={theme}>\n            <CssBaseline/>\n            <Container maxWidth={false}>\n                <Grid item xs={12}>\n                    <div className={classes.root}>\n                        <Grid container spacing={2}>\n                            <Grid item xs={12} sm={6}>\n                                <h1>Présentation</h1>\n                                <Paper className={classes.paper}>\n                                    <Grid container wrap=\"nowrap\" spacing={1}>\n                                        <Grid item xs>\n                                            <Typography>\n                                                Bonjour, je me présente, je m'appel Antonin et je suis un jeune développeur de 19 ans.\n                                                J'ai pour passion de concevoir plusieurs sites web ou logiciels à des\n                                                fins d'apprentissage et de divertissement. Je suis autodidacte en parallèle de mes\n                                                études. J'aime apprendre et m'intéresser à beaucoup de nouvelles technologies\n                                                telles que React.js, Node.js par exemple. Je suis quelqu'un qui va essayer de résoudre\n                                                des possibles problèmes par moi-même, mais je n'hésite pas à demander de l'aide\n                                                quand cela s'avère nécessaire\n                                            </Typography>\n                                        </Grid>\n                                    </Grid>\n                                </Paper>\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <h1>Formation</h1>\n                                <Paper className={classes.paper}>\n                                    <Grid container wrap=\"nowrap\" spacing={1}>\n                                        <Grid item xs>\n                                            <Typography>\n                                                Campus Sophia Ynov 2020-2021 - Deuxième année de bachelor.\n                                                CampusID 2019-2020 - Première année de bachelor.\n                                                Lycée les Eucalyptus à Nice 2018/2019 - Bac STI2D.\n                                            </Typography>\n                                        </Grid>\n                                    </Grid>\n                                </Paper>\n                            </Grid>\n                            <br/>\n                            <Grid item xs={12} sm={6}>\n                                <h1>Expériences</h1>\n                                <Paper className={classes.paper}>\n                                    <Grid container wrap=\"nowrap\" spacing={1}>\n                                        <Grid item xs>\n                                            <Typography>\n                                                Expériences:\n                                                Stage chez CampusID 2020\n                                                - Réalisation d'un tchat multi client / serveur en C sous linux. Pour\n                                                un projet de \"boîte à code\" dédié au collégiens. J'ai donc utiliser\n                                                GTK3.0 pour réaliser l'ihm du tchat. Le tchat est fonctionnel et\n                                                disponible sur mon github.\n                                            </Typography>\n                                        </Grid>\n                                    </Grid>\n                                </Paper>\n                            </Grid>\n                            <Grid item xs={12} sm={6} md={6} lg={6}>\n                                <h1>Compétences</h1>\n                                <Grid container spacing={2}>\n                                    <Grid item xs={3} sm={2} md={2} lg={1}>\n                                        <Skills accurate={80}/>\n                                    </Grid>\n                                    <Grid item xs={9} sm={10} md={4} lg={3}>\n                                        <Paper className={classes.paper}>\n                                            C/C++, C#/Java, PHP\n                                        </Paper>\n                                    </Grid>\n                                    <Grid item xs={3} sm={2} md={2} lg={1}>\n                                        <Skills accurate={90}/>\n                                    </Grid>\n                                    <Grid item xs={9} sm={10} md={4} lg={3}>\n                                        <Paper className={classes.paper}>\n                                            HTML, CSS, JavaScript\n                                        </Paper>\n                                    </Grid>\n                                    <Grid item xs={3} sm={2} md={2} lg={1}>\n                                        <Skills accurate={75}/>\n                                    </Grid>\n                                    <Grid item xs={9} sm={10} md={4} lg={3}>\n                                        <Paper className={classes.paper}>\n                                            React.js\n                                        </Paper>\n                                    </Grid>\n                                    <Grid item xs={3} sm={2} md={2} lg={1}>\n                                        <Skills accurate={70}/>\n                                    </Grid>\n                                    <Grid item xs={9} sm={10} md={4} lg={3}>\n                                        <Paper className={classes.paper}>\n                                            Node.js (API REST)\n                                        </Paper>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid item xs={12} sm={12} md={12} xl={12} lg={12}>\n                                <Project/>\n                            </Grid>\n                        </Grid>\n                    </div>\n                </Grid>\n            </Container>\n        </ThemeProvider>\n    );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.Fragment>\n    <App />\n  </React.Fragment>,\n  document.getElementById('app')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}