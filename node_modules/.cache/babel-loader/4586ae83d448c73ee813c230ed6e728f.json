{"ast":null,"code":"import _slicedToArray from\"C:/Users/waryt/WebstormProjects/portfolio2/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectSpread from\"C:/Users/waryt/WebstormProjects/portfolio2/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React from'react';import CircularProgress from'@material-ui/core/CircularProgress';import Typography from'@material-ui/core/Typography';import Box from'@material-ui/core/Box';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function CircularProgressWithLabel(props){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Box,{position:\"relative\",display:\"inline-flex\",left:2,children:[/*#__PURE__*/_jsx(CircularProgress,_objectSpread({variant:\"determinate\",size:50},props)),/*#__PURE__*/_jsx(Box,{top:0,left:0,bottom:0,right:0,position:\"absolute\",display:\"flex\",alignItems:\"center\",justifyContent:\"center\",children:/*#__PURE__*/_jsx(Typography,{variant:\"caption\",component:\"div\",color:\"textSecondary\",children:\"\".concat(Math.round(props.value),\"%\")})})]}),/*#__PURE__*/_jsx(Box,{children:props.label})]});}export default function Skills(props){var _React$useState=React.useState(0),_React$useState2=_slicedToArray(_React$useState,2),progress=_React$useState2[0],setProgress=_React$useState2[1];var accurate=props.accurate;React.useEffect(function(){var timer=setInterval(function(){setProgress(function(prevProgress){return prevProgress>=accurate?prevProgress:prevProgress+1;});},100);return function(){clearInterval(timer);};},[]);return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(CircularProgressWithLabel,{value:progress,label:props.label})});}","map":{"version":3,"sources":["C:/Users/waryt/WebstormProjects/portfolio2/src/Components/Skills.js"],"names":["React","CircularProgress","Typography","Box","CircularProgressWithLabel","props","Math","round","value","label","Skills","useState","progress","setProgress","accurate","useEffect","timer","setInterval","prevProgress","clearInterval"],"mappings":"yPAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAOC,CAAAA,gBAAP,KAA6B,oCAA7B,CACA,MAAOC,CAAAA,UAAP,KAAuB,8BAAvB,CACA,MAAOC,CAAAA,GAAP,KAAgB,uBAAhB,C,6IAEA,QAASC,CAAAA,yBAAT,CAAmCC,KAAnC,CAA0C,CACtC,mBACI,wCACI,MAAC,GAAD,EAAK,QAAQ,CAAC,UAAd,CAAyB,OAAO,CAAC,aAAjC,CAA+C,IAAI,CAAE,CAArD,wBACI,KAAC,gBAAD,gBAAkB,OAAO,CAAC,aAA1B,CAAwC,IAAI,CAAE,EAA9C,EAAsDA,KAAtD,EADJ,cAEI,KAAC,GAAD,EACI,GAAG,CAAE,CADT,CAEI,IAAI,CAAE,CAFV,CAGI,MAAM,CAAE,CAHZ,CAII,KAAK,CAAE,CAJX,CAKI,QAAQ,CAAC,UALb,CAMI,OAAO,CAAC,MANZ,CAOI,UAAU,CAAC,QAPf,CAQI,cAAc,CAAC,QARnB,uBAUI,KAAC,UAAD,EAAY,OAAO,CAAC,SAApB,CAA8B,SAAS,CAAC,KAAxC,CAA8C,KAAK,CAAC,eAApD,oBAAwEC,IAAI,CAACC,KAAL,CACpEF,KAAK,CAACG,KAD8D,CAAxE,OAVJ,EAFJ,GADJ,cAkBI,KAAC,GAAD,WAEKH,KAAK,CAACI,KAFX,EAlBJ,GADJ,CAyBH,CAUD,cAAe,SAASC,CAAAA,MAAT,CAAgBL,KAAhB,CAAuB,qBACFL,KAAK,CAACW,QAAN,CAAe,CAAf,CADE,oDAC3BC,QAD2B,qBACjBC,WADiB,qBAGlC,GAAMC,CAAAA,QAAQ,CAAGT,KAAK,CAACS,QAAvB,CAEAd,KAAK,CAACe,SAAN,CAAgB,UAAM,CAClB,GAAMC,CAAAA,KAAK,CAAGC,WAAW,CAAC,UAAM,CAC5BJ,WAAW,CAAC,SAACK,YAAD,QAAmBA,CAAAA,YAAY,EAAIJ,QAAhB,CAA2BI,YAA3B,CAA0CA,YAAY,CAAG,CAA5E,EAAD,CAAX,CACH,CAFwB,CAEtB,GAFsB,CAAzB,CAGA,MAAO,WAAM,CACTC,aAAa,CAACH,KAAD,CAAb,CACH,CAFD,CAGH,CAPD,CAOG,EAPH,EASA,mBACI,sCACI,KAAC,yBAAD,EAA2B,KAAK,CAAEJ,QAAlC,CAA4C,KAAK,CAAEP,KAAK,CAACI,KAAzD,EADJ,EADJ,CAKH","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nfunction CircularProgressWithLabel(props) {\r\n    return (\r\n        <>\r\n            <Box position=\"relative\" display=\"inline-flex\" left={2}>\r\n                <CircularProgress variant=\"determinate\" size={50} {...props} />\r\n                <Box\r\n                    top={0}\r\n                    left={0}\r\n                    bottom={0}\r\n                    right={0}\r\n                    position=\"absolute\"\r\n                    display=\"flex\"\r\n                    alignItems=\"center\"\r\n                    justifyContent=\"center\"\r\n                >\r\n                    <Typography variant=\"caption\" component=\"div\" color=\"textSecondary\">{`${Math.round(\r\n                        props.value,\r\n                    )}%`}</Typography>\r\n                </Box>\r\n            </Box>\r\n            <Box\r\n            >\r\n                {props.label}\r\n            </Box>\r\n        </>\r\n    );\r\n}\r\n\r\nCircularProgressWithLabel.propTypes = {\r\n    /**\r\n     * The value of the progress indicator for the determinate variant.\r\n     * Value between 0 and 100.\r\n     */\r\n    value: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default function Skills(props) {\r\n    const [progress, setProgress] = React.useState(0);\r\n\r\n    const accurate = props.accurate;\r\n\r\n    React.useEffect(() => {\r\n        const timer = setInterval(() => {\r\n            setProgress((prevProgress) => (prevProgress >= accurate ? prevProgress : prevProgress + 1));\r\n        }, 100);\r\n        return () => {\r\n            clearInterval(timer);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <CircularProgressWithLabel value={progress} label={props.label}/>\r\n        </>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}