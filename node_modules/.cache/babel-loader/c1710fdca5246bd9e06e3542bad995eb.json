{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\waryt\\\\WebstormProjects\\\\portfolio2\\\\src\\\\Components\\\\Project.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nimport DesignComponentProject from \"./DesignComponent/DesignComponentProject\";\nimport Chat from \"../../src/Video/Tchat.mp4\";\nimport Pacman from \"../../src/Video/Pacman.mp4\";\nimport ChatImage from \"../../src/Image/chat.png\";\nimport PacmanImage from '../Image/Pacman.png';\nimport { Grid, Paper } from \"@material-ui/core\";\nimport useStyles from \"./useStyles\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStylesCard = makeStyles({\n  root: {\n    maxWidth: 'xl',\n    maxHeight: 'lg'\n  },\n  media: {\n    height: 150\n  }\n});\n\nfunction CardCustom(props) {\n  _s();\n\n  const classes = useStylesCard();\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(CardActionArea, {\n      children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n        className: classes.media,\n        component: \"img\",\n        alt: \"Image du projet\",\n        height: \"140\",\n        image: props.srcImage,\n        title: \"Contemplative Reptile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"h5\",\n          align: 'center',\n          component: \"h2\",\n          children: props.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"textSecondary\",\n          align: 'left',\n          component: \"p\",\n          children: props.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      disableSpacing: false,\n      children: props.modal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CardCustom, \"voBM1hkP9B4BBv+mSZepp0HlA+k=\", false, function () {\n  return [useStylesCard];\n});\n\n_c = CardCustom;\n\nfunction Project() {\n  _s2();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        xl: 4,\n        lg: 6,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          className: classes.paper,\n          children: /*#__PURE__*/_jsxDEV(CardCustom, {\n            title: 'Programme de communication multi-client en C (Unix)',\n            srcImage: ChatImage,\n            content: 'Dans le cadre de mon stage Août 2020 pour CampusID, j\\'ai du réalisé un tchat sous unix' + ' avec ihm en C (GTK). J\\'ai du apprendre à utiliser les processus léger d\\'unix + les sémaphores (première utilisation / découverte).' + ' J\\'ai rencontré une difficulté sur la gestion simultanée des clients (gérer la perte de connection, faire un keep-alive).' + ' J\\'ai su ensuite trouvé une solution toute à fait viable.',\n            modal: /*#__PURE__*/_jsxDEV(DesignComponentProject, {\n              setTitle: 'Programme de communication multi-client en C (Unix)',\n              srcVideo: Chat,\n              linkGithub: 'https://github.com/Antonin-Artaud/Project-C/tree/master/Socket'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 33\n            }, this),\n            date: '10/09/2019'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        xl: 4,\n        lg: 6,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          className: classes.paper,\n          children: /*#__PURE__*/_jsxDEV(CardCustom, {\n            title: 'Pacman en C (Unix)',\n            srcImage: PacmanImage,\n            content: 'Voici un projet de première année. Il s\\'agit d\\'un jeu coder en C, je me suis inspiré de la base du pacman.\\n' + ' J\\'ai 3 versions de disponible de ce projet l\\'une via une api fournit par notre professeur, l\\'une avec GTK/CAIRO, et une dernière\\n' + ' qui utilise SDL (dans cette versions absolument tout est fait au plus bas niveau). J\\'ai utilisé un algorithme pathfinder pour les ennemis\\n' + ' pour trouver le chemin le plus court possible entre les ennemis et le joueur à chaque déplacement.',\n            modal: /*#__PURE__*/_jsxDEV(DesignComponentProject, {\n              setTitle: 'Pacman en C (Unix)',\n              srcVideo: Pacman,\n              linkGithub: 'https://github.com/Antonin-Artaud/Project-C/tree/master/Pacman'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 33\n            }, this),\n            date: '20/07/2019'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        xl: 4,\n        lg: 6,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          className: classes.paper,\n          children: /*#__PURE__*/_jsxDEV(CardCustom, {\n            title: 'Portfolio (React.js)',\n            srcImage: PacmanImage,\n            content: \"Dans le cadre de mon école j'ai été amener à réaliser un portfolio. J'ai donc\" + \" choisis d'utiliser le framework React.js que j'affectionne particulièrement\",\n            modal: /*#__PURE__*/_jsxDEV(Button, {\n              href: 'https://github.com/Antonin-Artaud/portfolio',\n              variant: 'contained',\n              target: '_bank',\n              color: \"primary\",\n              size: \"medium\",\n              autoFocus: true,\n              children: \"Github code\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 33\n            }, this),\n            date: '07/03/2021'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(Project, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = Project;\nexport default Project;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CardCustom\");\n$RefreshReg$(_c2, \"Project\");","map":{"version":3,"sources":["C:/Users/waryt/WebstormProjects/portfolio2/src/Components/Project.js"],"names":["React","DesignComponentProject","Chat","Pacman","ChatImage","PacmanImage","Grid","Paper","useStyles","makeStyles","CardContent","Typography","CardActions","Card","CardActionArea","CardMedia","Button","useStylesCard","root","maxWidth","maxHeight","media","height","CardCustom","props","classes","srcImage","title","content","modal","Project","paper"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport DesignComponentProject from \"./DesignComponent/DesignComponentProject\";\r\nimport Chat from \"../../src/Video/Tchat.mp4\";\r\nimport Pacman from \"../../src/Video/Pacman.mp4\";\r\nimport ChatImage from \"../../src/Image/chat.png\";\r\nimport PacmanImage from '../Image/Pacman.png';\r\nimport {Grid, Paper} from \"@material-ui/core\";\r\nimport useStyles from \"./useStyles\";\r\nimport {makeStyles} from \"@material-ui/styles\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStylesCard = makeStyles({\r\n    root: {\r\n        maxWidth: 'xl',\r\n        maxHeight: 'lg',\r\n    },\r\n    media: {\r\n        height: 150,\r\n    },\r\n});\r\n\r\nfunction CardCustom(props) {\r\n    const classes = useStylesCard();\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardActionArea>\r\n                <CardMedia\r\n                    className={classes.media}\r\n                    component=\"img\"\r\n                    alt=\"Image du projet\"\r\n                    height=\"140\"\r\n                    image={props.srcImage}\r\n                    title=\"Contemplative Reptile\"\r\n                />\r\n                <CardContent>\r\n                    <Typography gutterBottom variant=\"h5\" align={'center'} component=\"h2\">\r\n                        {props.title}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" align={'left'} component=\"p\">\r\n                        {props.content}\r\n                    </Typography>\r\n                </CardContent>\r\n            </CardActionArea>\r\n            <CardActions disableSpacing={false}>\r\n                {props.modal}\r\n            </CardActions>\r\n        </Card>\r\n    )\r\n}\r\n\r\nfunction Project(){\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12} sm={6} xl={4} lg={6}>\r\n                    <Paper className={classes.paper}>\r\n                        <CardCustom\r\n                            title={'Programme de communication multi-client en C (Unix)'}\r\n                            srcImage={ChatImage}\r\n                            content={'Dans le cadre de mon stage Août 2020 pour CampusID, j\\'ai du réalisé un tchat sous unix' +\r\n                            ' avec ihm en C (GTK). J\\'ai du apprendre à utiliser les processus léger d\\'unix + les sémaphores (première utilisation / découverte).' +\r\n                            ' J\\'ai rencontré une difficulté sur la gestion simultanée des clients (gérer la perte de connection, faire un keep-alive).' +\r\n                            ' J\\'ai su ensuite trouvé une solution toute à fait viable.'}\r\n                            modal={\r\n                                <DesignComponentProject\r\n                                    setTitle={'Programme de communication multi-client en C (Unix)'}\r\n                                    srcVideo={Chat}\r\n                                    linkGithub={'https://github.com/Antonin-Artaud/Project-C/tree/master/Socket'}\r\n                                />\r\n                            }\r\n                            date={'10/09/2019'}\r\n                        />\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} xl={4} lg={6}>\r\n                    <Paper className={classes.paper}>\r\n                        <CardCustom\r\n                            title={'Pacman en C (Unix)'}\r\n                            srcImage={PacmanImage}\r\n                            content={'Voici un projet de première année. Il s\\'agit d\\'un jeu coder en C, je me suis inspiré de la base du pacman.\\n' +\r\n                            ' J\\'ai 3 versions de disponible de ce projet l\\'une via une api fournit par notre professeur, l\\'une avec GTK/CAIRO, et une dernière\\n' +\r\n                            ' qui utilise SDL (dans cette versions absolument tout est fait au plus bas niveau). J\\'ai utilisé un algorithme pathfinder pour les ennemis\\n' +\r\n                            ' pour trouver le chemin le plus court possible entre les ennemis et le joueur à chaque déplacement.'}\r\n                            modal={\r\n                                <DesignComponentProject\r\n                                    setTitle={'Pacman en C (Unix)'}\r\n                                    srcVideo={Pacman}\r\n                                    linkGithub={'https://github.com/Antonin-Artaud/Project-C/tree/master/Pacman'}\r\n                                />\r\n                            }\r\n                            date={'20/07/2019'}\r\n                        />\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} xl={4} lg={6}>\r\n                    <Paper className={classes.paper}>\r\n                        <CardCustom\r\n                            title={'Portfolio (React.js)'}\r\n                            srcImage={PacmanImage}\r\n                            content={\"Dans le cadre de mon école j'ai été amener à réaliser un portfolio. J'ai donc\" +\r\n                            \" choisis d'utiliser le framework React.js que j'affectionne particulièrement\"}\r\n                            modal={\r\n                                <Button\r\n                                    href={'https://github.com/Antonin-Artaud/portfolio'}\r\n                                    variant={'contained'}\r\n                                    target={'_bank'}\r\n                                    color=\"primary\"\r\n                                    size=\"medium\"\r\n                                    autoFocus>\r\n                                    Github code\r\n                                </Button>\r\n                            }\r\n                            date={'07/03/2021'}\r\n                        />\r\n                    </Paper>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Project;\r\n"]},"metadata":{},"sourceType":"module"}